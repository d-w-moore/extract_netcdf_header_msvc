irods.host=irodshost
irods.port=1247
irods.zoneName=tempZone
irods.admin.user=rods
irods.admin.password=rods

# STANDARD | PAM AUTH
irods.auth.scheme=STANDARD
default.storage.resource=

# sets jargon ssl negotiation policy for the client. Leaving to DONT_CARE defers to the server, and is recommended
# NO_NEGOTIATION, CS_NEG_REFUSE, CS_NEG_REQUIRE, CS_NEG_DONT_CARE
ssl.negotiation.policy=CS_NEG_REFUSE

##########################################################
# jargon properties settings
utilize.packing.streams=true

# jargon now supports checksum calculation for streaming uploads.  This does not currently verify, but does store if set to true
compute.checksum=true

##########################################################
# metalnx database settings

db.driverClassName=org.postgresql.Driver
db.url=jdbc:postgresql://dbhost:5432/IRODS-EXT
#db.username=irodsext
#db.password=password
db.username=metalnx
db.password=changeme
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Debugging options
hibernate.show_sql=false
hibernate.format_sql=false

# Automatic schema generation
hibernate.hbm2ddl.auto=update

# Connection parameters
connection.pool_size=10

######################################
# other irods environment

# Jobs parameters
jobs.irods.username=rods
jobs.irods.password=rods
jobs.irods.auth.scheme=STANDARD
runSyncJobs=true

# HTTP connection for RMD
rmd.connection.timeout=500
rmd.connection.port=8000

# Reverse DNS lookup on dashboard
reverse.dns.lookup=false

######################################
# msi props
populate.msi.enabled=false
illumina.msi.enabled=true

# MSI API version supported by this application
msi.api.version=1.X.X

msi.metalnx.list=libmsiget_illumina_meta.so,libmsiobjget_microservices.so,libmsiobjget_version.so,libmsiobjjpeg_extract.so,libmsiobjput_mdbam.so,libmsiobjput_mdbam.so,libmsiobjput_mdmanifest.so,libmsiobjput_mdvcf.so,libmsiobjput_populate.so

msi.irods.list=libmsisync_to_archive.so,libmsi_update_unixfilesystem_resource_free_space.so,libmsiobjput_http.so,libmsiobjput_irods.so,libmsiobjget_irods.so,libmsiobjget_http.so,libmsiobjput_slink.so,libmsiobjget_slink.so

msi.irods.42.list=libmsisync_to_archive.so,libmsi_update_unixfilesystem_resource_free_space.so

msi.other.list=
######################################
# global feature flags that serve as defaults. Note that the info handling will manipulate aspects of the data profiler,
# so by default some things are set to null to be turned on by the service depending on the view requested (e.g. acl, metadata, replicas) and should be left 'false' as a default,
# but other aspects, such as metadata templating and mime type detection, can be globally turned on or off depending on the implmenetation.
# controls access to features globally
metalnx.enable.tickets=false
# disable automatic detection and running of rules on upload
metalnx.enable.upload.rules=false
# download limit to be set as 100MB
metalnx.download.limit=100
# show dashboard (off by default due to performance issues)
metalnx.enable.dashboard=false
######################################
# info home page feature flags
# this controls the behavior of the data profiler and what information it will gather
irodsext.dataprofiler.retrieve.tickets=false
# process starred or favorites
irodsext.dataprofiler.retrieve.starred=true
# process shared
irodsext.dataprofiler.retrieve.shared=false
# tags and comments
irodsext.dataprofiler.retrieve.tags.and.comments=false
# metadata templates (currently not implemented)
irodsext.dataprofiler.retrieve.metadata.templates=false
# save data type information for later use
irodsext.datatyper.persist.data.types=false
# perform a detailed versus a lightweight data typing, which may involve processing the file contents
irodsext.datatyper.detailed.determination=false

#############################
# misc ui configuration niceties
#############################
# allow translation of iRODS auth types to user friendly names in login
# in the form irodstype:displaytype|
metalnx.authtype.mappings=PAM:PAM|STANDARD:Standard
